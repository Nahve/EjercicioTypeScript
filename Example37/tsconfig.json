{
  "compilerOptions": {
    /* Basic Options */
    "target": "ES2016",        /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', 'ES2022', 'ES2023', 'ESNext'. */
    "module": "CommonJS",      /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', 'esnext'. */
    "outDir": "./dist",          /* Redirect output structure to the directory. */
    "rootDir": "./src",          /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "strict": true,            /* Enable all strict type-checking options. */
    "esModuleInterop": true,   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "skipLibCheck": true,       /* Skip type checking of declaration files (*.d.ts). */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */

    /* Type Checking Options */
    // "noImplicitAny": true,    /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true, /* Enable strict null checks. */
    // "strictFunctionTypes": true, /* Enable strict checking of function types. */
    // "strictBindCallApply": true, /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "noImplicitThis": true,   /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,     /* Ensure 'use strict' is emitted for all files. */

    /* Additional Checks */
    // "noUnusedLocals": true,   /* Report errors on unused locals. */
    // "noUnusedParameters": true, /* Report errors on unused parameters. */
    // "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statements. */
    // "noUncheckedIndexedAccess": true, /* Include 'undefined' in index signature results */
    // "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type */

    /* Module Resolution Options */
    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "baseUrl": "./",         /* Base directory to resolve non-absolute module names. */
    // "paths": {},             /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],          /* List of root folders whose combined content represents the structure of the generated 'outDir'. */
    // "typeRoots": [],         /* List of folders to look for type definitions within. */
    // "types": [],             /* List of type definitions to include. */
    // "allowUmdGlobalAccess": true, /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    "sourceMap": true,         /* Generates corresponding '.map' file. */
    // "inlineSourceMap": true,  /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,    /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,  /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "lib": ["es2020", "dom"],   /* Specify library files to be included in the compilation. */
    // "allowJs": true,         /* Allow javascript files to be compiled. */
    // "checkJs": true,         /* Report errors in .js files. */
    // "out": "./",            /* Concatenate and emit output to single file. */
    // "noEmitOnError": true,    /* Do not emit outputs if any errors were reported. */
    // "preserveConstEnums": true, /* Do not erase const enum declarations in generated code. */
    // "removeComments": true,    /* Do not emit comments to output. */
    // "noEmitHelpers": true,    /* Do not generate custom helper functions like '__extends' in output. */
    // "importHelpers": true,    /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true, /* Provide full support for iterables in 'for...of', spread, and destructuring when targeting 'ES5' or lower. */
    // "isolatedModules": true,  /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    // "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "resolveJsonModule": true, /* Allow importing .json files. */
    // "esModuleInterop": true,    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
  },
  "include": [
    "./src/**/*"
  ],
  "exclude": [
    "node_modules"
  ]
}